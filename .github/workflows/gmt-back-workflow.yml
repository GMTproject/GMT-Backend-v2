name: gmt-back-workflow

on:
  push:
    branches: ["develop"]

env:
  DOCKER_HUB_USERNAME: seolhee
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_SCHEMA: ${{ secrets.DB_SCHEMA }}

jobs:
  gmt-back-workflow:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.28
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_SCHEMA }} #schmea == dbname
        ports:
          - 3306:3306

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Init Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.6.1

      - name: Set up JDK 11 (job success)
        if: ${{ success() }}
        run: echo "Set up JDK 11 is succeeded"

      - name: Setup Gradle's permission
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Docker build And Push
        run: |
          docker build -t $DOCKER_IMAGE_NAME .
          docker tag $DOCKER_IMAGE_NAME $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME:latest
          docker push $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME:latest

      - name: EC2 Docker Run
        run: |
          echo "환경 변수로 넣기 test"

# Java 환경변수
# application.yml 파일에서는 Docker 환경 변수로 넣어줘야한다. (-Dspring-boot.run.arguments 사용)